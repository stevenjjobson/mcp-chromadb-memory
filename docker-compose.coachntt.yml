services:
  # PostgreSQL with pgvector for CoachNTT
  postgres-coachntt:
    image: pgvector/pgvector:pg16
    container_name: postgres-coachntt
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    environment:
      - POSTGRES_DB=coachntt_memory
      - POSTGRES_USER=coachntt_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-coachntt_pass}
    volumes:
      - postgres_coachntt_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U coachntt_user -d coachntt_memory"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - coachntt-network

  chromadb-coachntt:
    image: chromadb/chroma:latest
    container_name: chromadb-coachntt
    ports:
      - "8002:8000"  # Different port to avoid conflicts
    volumes:
      - ./data/chroma-coachntt:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
      - ANONYMIZED_TELEMETRY=FALSE
    networks:
      - coachntt-network

  # CoachNTT MCP Server (for testing)
  coachntt:
    build:
      context: .
      dockerfile: Dockerfile.coachntt
    container_name: coachntt-server
    depends_on:
      - chromadb-coachntt
      - postgres-coachntt
    environment:
      - DOCKER_CONTAINER=true
      - CHROMA_HOST=chromadb-coachntt
      - CHROMA_PORT=8000
      - POSTGRES_HOST=postgres-coachntt
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=coachntt_memory
      - POSTGRES_USER=coachntt_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-coachntt_pass}
      - USE_HYBRID_STORAGE=true
      - CODE_INDEXING_ENABLED=true
      - MCP_SERVER_NAME=CoachNTT
      - MCP_SERVER_VERSION=1.0.0
    secrets:
      - openai_api_key
    volumes:
      - ./data/coachntt:/app/data
    networks:
      - coachntt-network
    command: ["node", "dist/index-coachntt.js"]

networks:
  coachntt-network:
    driver: bridge

volumes:
  postgres_coachntt_data:
    driver: local

secrets:
  openai_api_key:
    file: ./secrets/openai_api_key.txt