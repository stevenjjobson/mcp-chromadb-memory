# ChromaDB Configuration
CHROMA_HOST=chromadb
CHROMA_PORT=8000

# OpenAI Configuration (for embeddings)
# IMPORTANT: Do not put your actual API key here!
# Use one of these secure methods instead:
# 1. Docker secrets (recommended for production)
# 2. Windows Credential Manager (recommended for development)
# 3. Environment variables (acceptable for personal use)
OPENAI_API_KEY=your-api-key-here

# Memory Configuration
MEMORY_IMPORTANCE_THRESHOLD=0.7
MEMORY_COLLECTION_NAME=ai_memories
MAX_MEMORY_RESULTS=10

# Server Configuration
MCP_SERVER_NAME=ai-memory-server
MCP_SERVER_VERSION=1.0.0

# GitHub Repository (optional)
GITHUB_REPO_OWNER=your-github-username
GITHUB_REPO_NAME=your-repo-name
GITHUB_ACCESS_TOKEN=your-github-token-here

# Obsidian Integration (optional)
# Path to your Obsidian vault
OBSIDIAN_VAULT_PATH=C:/Users/Steve/Obsidian/StevesVault
# Enable automatic import of important notes
OBSIDIAN_AUTO_IMPORT=false
# Folders to watch for auto-import (comma-separated)
OBSIDIAN_WATCH_FOLDERS=Daily Notes,Projects
# Sync Obsidian tags with memory metadata
OBSIDIAN_SYNC_TAGS=true

# Session Logging Configuration (optional)
# Automatically start logging Claude Code sessions
AUTO_START_SESSION_LOGGING=false
# Project name for auto-started sessions
SESSION_LOGGING_PROJECT_NAME=MCP ChromaDB Memory
# Automatically save session on exit
SESSION_LOGGING_SAVE_ON_EXIT=true

# Template System Configuration
# Maximum template size in bytes (default: 1MB)
TEMPLATE_MAX_SIZE=1048576
# Enable security scanning of templates
TEMPLATE_SECURITY_SCAN=true
# Allowed template sources (comma-separated domains)
TEMPLATE_ALLOWED_SOURCES=github.com,raw.githubusercontent.com,gist.github.com
# Template cache directory relative to vault
TEMPLATE_CACHE_DIR=.template-cache
# Enable automatic template synchronization
TEMPLATE_SYNC_ENABLED=true
# Automatically import templates on webhook events
TEMPLATE_AUTO_IMPORT=false

# Webhook Configuration
# Webhook request timeout in milliseconds
WEBHOOK_TIMEOUT=30000
# Maximum webhook retry attempts
WEBHOOK_MAX_RETRIES=3
# Header name for webhook signatures
WEBHOOK_SIGNATURE_HEADER=X-Template-Signature
# Rate limit for webhook requests per hour
WEBHOOK_RATE_LIMIT=100
# Webhook callback URL (for registering with external services)
WEBHOOK_CALLBACK_URL=https://your-server.com/webhooks/templates
# Webhook secret for signature verification
WEBHOOK_SECRET=your-webhook-secret-here

# PostgreSQL Configuration (for hybrid storage)
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DATABASE=mcp_memory
POSTGRES_USER=mcp_user
POSTGRES_PASSWORD=your-postgres-password-here
POSTGRES_POOL_MAX=20
POSTGRES_POOL_MIN=5
POSTGRES_IDLE_TIMEOUT=30000
POSTGRES_CONNECTION_TIMEOUT=2000

# Hybrid Storage Feature Flags
# Enable hybrid PostgreSQL + ChromaDB storage
USE_HYBRID_STORAGE=false
# Enable dual write to both databases during migration
ENABLE_DUAL_WRITE=false
# Percentage of reads from PostgreSQL (0.0-1.0)
POSTGRES_READ_RATIO=0.0

# Hierarchical Memory Tiers
TIER_ENABLED=false
TIER_WORKING_RETENTION=48
TIER_SESSION_RETENTION=336
TIER_LONGTERM_RETENTION=8760
TIER_MIGRATION_INTERVAL=3600000

# Code Intelligence Features
CODE_INDEXING_ENABLED=false
CODE_INDEXING_PATTERNS=**/*.{js,ts,py,java,go,rs,cpp}
CODE_INDEXING_EXCLUDE=**/node_modules/**,**/dist/**,**/.git/**
CODE_PATTERN_DETECTION=false
CODE_STREAMING_ENABLED=true

# Batch Processing Configuration
BATCH_SIZE=100
BATCH_DELAY_MS=200
MAX_CONCURRENT_BATCHES=3
RETRY_ATTEMPTS=3
RETRY_DELAY_MS=1000